receivers:
  otlp:
    protocols:
      grpc:
  loki:
    protocols:
      http:
        endpoint: :3500
    use_incoming_timestamp: true

exporters:
  logging:
    verbosity: detailed
  otlp:
    endpoint: ${TRACES_URL}
    tls:
      insecure: false
    auth:
      authenticator: basicauth/traces

  prometheusremotewrite:
    endpoint: ${METRICS_URL}
    auth:
      authenticator: basicauth/metrics

  loki:
    endpoint: ${LOGS_URL}
    auth:
      authenticator: basicauth/logs

processors:
  spanmetrics:
    metrics_exporter: prometheusremotewrite
  attributes:
    actions:
      - action: insert
        key: loki.format
        value: raw
      - action: insert 
        key: loki.attribute.labels 
        value: service_name

extensions:
  health_check:
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679
    basicauth/traces:
      client_auth:
        username: "${TRACES_USER_ID}"
        password: "${TRACES_API_KEY}"
    basicauth/metrics:
      client_auth:
        username: "${METRICS_USER_ID}"
        password: "${METRICS_API_KEY}"
    basicauth/logs:
      client_auth:
        username: "${LOGS_USER_ID}"
        password: "${LOGS_API_KEY}"   

connectors:
  spanmetrics:

service:
  extensions: [ basicauth/traces, basicauth/metrics, basicauth/logs, health_check ]
  pipelines:
    metrics:
      receivers: [otlp, spanmetrics]
      exporters: [prometheusremotewrite]
    traces:
      receivers: [otlp]
      exporters: [otlp, spanmetrics]
    logs:
      receivers: [loki]
      processors: [attributes]
      exporters: [loki]
  telemetry:
    logs:
      level: "debug"